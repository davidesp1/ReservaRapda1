Você é uma IA especialista em Vite + React + Supabase. No painel de administração existe uma rota “/settings” com uma aba “Configurações de Pagamento”. Nessa aba há:

1. Um campo de texto para inserir a API Key da Eupago (campo “eupago_api_key”).  
2. Abaixo, uma lista de checkboxes ou botões para ativar as formas de pagamento suportadas pela Eupago: Cartão, MB Way e Multibanco.

Sua tarefa:

1. **Buscar e exibir**  
   - Ao montar o componente, faça uma consulta no Supabase à tabela `payment_settings` (ou similar) para receber:  
     - `eupago_api_key` (string)  
     - `enabled_methods` (array de strings: `["card", "mbway", "multibanco"]` ou similar)  
   - Preencha o campo de API Key com o valor retornado (se existir).  
   - Marque/desmarque as opções de pagamento de acordo com `enabled_methods`.

2. **Habilitar condicionais**  
   - Se `eupago_api_key` for **nula**, **vazia** ou inválida, **desabilite** (ou oculte) todas as checkboxes/opções de Cartão, MB Way e Multibanco, e exiba uma mensagem de ajuda:  
     “Insira sua API Key da Eupago para ativar estas opções.”

3. **Salvar alterações**  
   - No clique do botão “Salvar”, valide que o `eupago_api_key` não esteja vazio; caso contrário, mostre um alerta de erro (use SweetAlert2).  
   - Envie ao Supabase um upsert em `payment_settings` com os campos atualizados:  
     - `eupago_api_key` (string)  
     - `enabled_methods` (array de strings)  
   - Exiba um toast de sucesso ou erro após a resposta.

4. **UX e feedback**  
   - Enquanto carrega ou salva, exiba um spinner ou estado de loading.  
   - Use componentes do seu design system (Inputs, Switches/Checkboxes, Button).  
   - Todas as validações e feedbacks devem usar SweetAlert2 ou toasts do UI kit.

**Saída esperada:**  
- Código React (TSX) do componente completo.  
- Detalhes da query `supabase.from('payment_settings').select/upsert`.  
- Exemplo de estado inicial, hooks e handlers de evento.  
- Explicação breve de cada parte (fetch, condicionais, save).  
